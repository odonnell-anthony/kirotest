apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wiki-uploads-pvc
  namespace: wiki-app
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: shared-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wiki-logs-pvc
  namespace: wiki-app
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: shared-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki-app
  namespace: wiki-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: wiki-app
  template:
    metadata:
      labels:
        app: wiki-app
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: wiki-app
        image: wiki-app:production
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql+asyncpg://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/$(POSTGRES_DB)"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis-service:6379/0"
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: wiki-app-config
              key: POSTGRES_USER
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: wiki-app-config
              key: POSTGRES_DB
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: postgres-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: redis-password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: secret-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: jwt-secret-key
        envFrom:
        - configMapRef:
            name: wiki-app-config
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: logs-storage
          mountPath: /app/logs
        - name: tmp-storage
          mountPath: /app/tmp
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: wiki-uploads-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: wiki-logs-pvc
      - name: tmp-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: wiki-app-service
  namespace: wiki-app
spec:
  selector:
    app: wiki-app
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki-worker
  namespace: wiki-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wiki-worker
  template:
    metadata:
      labels:
        app: wiki-worker
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: wiki-worker
        image: wiki-app:production
        command:
        - celery
        - -A
        - app.core.celery
        - worker
        - --loglevel=info
        - --concurrency=4
        - --max-tasks-per-child=1000
        env:
        - name: DATABASE_URL
          value: "postgresql+asyncpg://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/$(POSTGRES_DB)"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis-service:6379/0"
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: wiki-app-config
              key: POSTGRES_USER
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: wiki-app-config
              key: POSTGRES_DB
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: postgres-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: redis-password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: wiki-app-secrets
              key: secret-key
        envFrom:
        - configMapRef:
            name: wiki-app-config
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: logs-storage
          mountPath: /app/logs
        - name: tmp-storage
          mountPath: /app/tmp
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: wiki-uploads-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: wiki-logs-pvc
      - name: tmp-storage
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: wiki-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: tls-certs
          mountPath: /etc/nginx/ssl
        - name: logs-storage
          mountPath: /var/log/nginx
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: tls-certs
        secret:
          secretName: wiki-app-tls
      - name: logs-storage
        persistentVolumeClaim:
          claimName: wiki-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: wiki-app
spec:
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  type: LoadBalancer