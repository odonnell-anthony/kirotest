apiVersion: v1
kind: Secret
metadata:
  name: wiki-app-secrets
  namespace: wiki-app
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  postgres-password: <BASE64_ENCODED_POSTGRES_PASSWORD>
  redis-password: <BASE64_ENCODED_REDIS_PASSWORD>
  secret-key: <BASE64_ENCODED_SECRET_KEY>
  jwt-secret-key: <BASE64_ENCODED_JWT_SECRET_KEY>
---
apiVersion: v1
kind: Secret
metadata:
  name: wiki-app-tls
  namespace: wiki-app
type: kubernetes.io/tls
data:
  tls.crt: <BASE64_ENCODED_TLS_CERT>
  tls.key: <BASE64_ENCODED_TLS_KEY>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wiki-app-config
  namespace: wiki-app
data:
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  POSTGRES_DB: "wiki"
  POSTGRES_USER: "wiki"
  REDIS_DB: "0"
  MAX_UPLOAD_SIZE: "104857600"
  WORKERS: "4"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: wiki-app
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        client_max_body_size 100M;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        upstream wiki_backend {
            server wiki-app-service:8000;
        }
        
        server {
            listen 80;
            server_name _;
            return 301 https://$host$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name _;
            
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
            ssl_prefer_server_ciphers off;
            
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            
            location / {
                proxy_pass http://wiki_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /api/health {
                proxy_pass http://wiki_backend;
                access_log off;
            }
        }
    }